project_name: cream-track-hacker

env_files:
  github_token: ~/.config/goreleaser/github_token

release:
  github:
    owner: streamingfast
    name: cream-track-hacker
  draft: true
  name_template: '{{.Tag}}'
  extra_files:
    - glob: ./release/**/*

changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'

builds:
- id: tracker
  binary: tracker
  main: ./cmd/tracker
  env:
  - CGO_ENABLED=0
  goos:
    - linux
    - windows
  goarch:
    - amd64
- id: tracker-osx
  binary: tracker
  main: ./cmd/tracker
  env:
  - CGO_ENABLED=0
  goos:
    - darwin
  goarch:
    - amd64
  hooks:
    post:
      - gon gon.sign.hcl

archives:
- replacements:
    darwin: macOS
    linux: linux
    386: i386
    amd64: x86_64
  format_overrides:
    - goos: darwin
      format: zip
  files:
  - LICENSE
  - README.md

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ .Tag }}-next"

signs:
  - id: gpg
    artifacts: checksum
    args: [
      "--pinentry-mode", "loopback",
      "--passphrase", "{{ .Env.GPG_PASSPHRASE }}",
      "-u", "{{ .Env.GPG_FINGERPRINT }}",
      "--output", "${signature}",
      "--detach-sign", "${artifact}",
    ]
  - id: notarize
    artifacts: all
    signature: "{{ .ProjectName }}_{{ .Version }}_macOS_x86_64.zip"
    ids:
    - tracker-osx
    cmd: sh
    args:
      - -c
      - |
        # The Gon notarization process has no way to inject it the right final versionned packaged
        # name to notarize. So, from this "inline" script we move the package to a known file location,
        # notarize it and then we move it back to its correct location.
        #
        # Don't try to use Bash variables, it doesn't work properly (Goreleaser replaces them up-front)

        mv "dist/{{ .ProjectName }}_{{ .Version }}_macOS_x86_64.zip" dist/tracker.zip
        gon gon.notarize.hcl
        mv dist/tracker.zip dist/"{{ .ProjectName }}_{{ .Version }}_macOS_x86_64.zip"


